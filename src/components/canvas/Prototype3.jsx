/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\public\Models\prototype3.gltf 
*/

import { useGLTF, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { gsap } from "gsap";
import React, { useLayoutEffect, useRef } from "react";

export const FLOOR_HEIGHT = 2;
export const NB_FLOORS = 3;

export function Prototype3(props) {
	const { nodes, materials } = useGLTF("./models/prototype3.gltf");
	const ref = useRef();
	const tl = useRef();
	const floorThreeRef = useRef();
	const floorTwoRef = useRef();
	const floorOneRef = useRef();
	const scroll = useScroll();

	useFrame(() => {
		tl.current.seek(scroll.offset * tl.current.duration());
	});

	useLayoutEffect(() => {
		tl.current = gsap.timeline();

		// VERTICAL ANIMATION

		tl.current.to(
			ref.current.position,
			{
				duration: 2,
				y: -FLOOR_HEIGHT * (NB_FLOORS - 1),
			},
			0
		);

		// // Whole Floor animtion
		// tl.current.from(
		//   ref.current.position,
		//   {
		//     duration: 0.5,
		//     y: 0,
		//   },
		//   -0.5
		// );

		// FLOOR One ANIMATION
		tl.current.from(
			floorOneRef.current.position,
			{
				duration: 0.5,
				z: -2,
			},
			-0.5
		);
		tl.current.to(
			floorOneRef.current.position,
			{
				duration: 0.5,
				y: -2,
			},
			1
		);

		// FLOOR Two ANIMATION
		tl.current.from(
			floorTwoRef.current.position,
			{
				duration: 0.5,
				z: -8,
			},
			0
		);
		tl.current.to(
			floorTwoRef.current.rotation,
			{
				duration: 0.5,
				y: Math.PI / 2,
			},
			0.5
		);
		tl.current.to(
			floorTwoRef.current.position,
			{
				duration: 0.75,
				z: 2,
				x: 2,
			},
			1
		);

		tl.current.to(
			floorTwoRef.current.position,
			{
				duration: 0.5,
				y: -6,
			},
			3
		);

		// FLOOR Three ANIMATION
		tl.current.from(
			floorThreeRef.current.position,
			{
				duration: 0.5,
				y: 5,
			},
			1.75
		);
		tl.current.to(
			floorThreeRef.current.position,
			{
				duration: 0.5,
				z: 2,
			},
			2.5
		);

		tl.current.to(
			floorThreeRef.current.position,
			{
				duration: 0.5,
				x: 2,
			},
			3
		);
		
	}, []);

	return (
		<group {...props} dispose={null} ref={ref} position={[-1, -1, 1]}>
			<group position={[-4, 4, -4]}>
				<group ref={floorThreeRef}>
					<mesh
						geometry={nodes.Cube003.geometry}
						material={materials["Material.004"]}
					/>
					<mesh
						geometry={nodes.Cube003_1.geometry}
						material={materials["Material.005"]}
					/>
				</group>
			</group>
			<group position={[-2, 2, -2]}>
				<group ref={floorTwoRef}>
					<mesh
						geometry={nodes.Cube004.geometry}
						material={materials["Material.002"]}
					/>
					<mesh
						geometry={nodes.Cube004_1.geometry}
						material={materials["Material.003"]}
					/>
				</group>
			</group>
			<group position={[0, 0, 0]}>
				<group ref={floorOneRef}>
					<mesh
						geometry={nodes.Cube002.geometry}
						material={materials["Material.001"]}
					/>
					<mesh
						geometry={nodes.Cube002_1.geometry}
						material={materials["Material.000"]}
					/>
				</group>
			</group>
		</group>
	);
}

useGLTF.preload("./models/prototype3.gltf");
